{"version":3,"sources":["ng://material-angular-select/lib/material-angular-select.component.ts","ng://material-angular-select/lib/material-angular-select.module.ts"],"names":["MaterialAngularSelectComponent","prototype","ngOnInit","this","id","name","Math","round","random","changeDetector","detach","ngOnChanges","changes","_this","hasOwnProperty","classStyle","currentValue","forEach","style","dropdown","nativeElement","classList","add","isViewInit","loadData","todoAfterInit","push","bind","setCurrentValue","setSelectedItem","label","replace","componentHandler","upgradeElements","item","_a","keys","value","title","data","length","dataArray","disabled","ngAfterViewInit","func","call","detectChanges","reattach","menuKeyDown","event","stopImmediatePropagation","stopPropagation","preventDefault","isKeyNavigation","isVisible","menu","parentElement","contains","keyCode","arrowkeyLocation","closeMenu","openMenu","keyDownTab","onInputClick","e","hideAllMenu","isFocused","opened","findIndex","show","document","querySelectorAll","select","querySelector","hide","selectedValue","emit","MaterialTextfield","change","setTimeout","updateClasses_","evt","createEvent","initEvent","input","dispatchEvent","fireEvent","Component","args","selector","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","Input","Output","ViewChild","ViewChildren","fixHeight","isFloatingLabel","arrow","EventEmitter","MaterialAngularSelectModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import 'material-design-lite/material';\n\ndeclare var componentHandler: any;\n\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'material-angular-select', // tslint:disable-line\n  styleUrls: ['./material-angular-select.component.scss'],\n  templateUrl: './material-angular-select.component.html',\n  encapsulation: ViewEncapsulation.None, // tslint:disable-line\n})\n\nexport class MaterialAngularSelectComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() public data: any[] = [];\n  @Input() public label = '';\n  @Input() public name = '';\n  @Input() public fixHeight = false;\n  @Input() public isFloatingLabel = true;\n  @Input() public disabled = false;\n  @Input() public classStyle: string[];\n  @Input() public arrow = true;\n  @Input() public keys = { // required if use array of object with different structure\n    value: 'value',\n    title: 'title',\n  };\n  @Input() public currentValue = {\n    [this.keys.title]: '',\n    [this.keys.value]: '',\n  };\n\n  @Output() public selectedValue = new EventEmitter();\n\n  public id: string;\n\n  @ViewChild('dropdown') dropdown: ElementRef;\n  @ViewChild('input') input: ElementRef;\n  @ViewChild('hiddenInput') hiddenInput: ElementRef;\n  @ViewChild('menu') menu: ElementRef;\n  @ViewChildren('li') list: QueryList<ElementRef>;\n\n  private opened = false;\n  public isFocused = false;\n  public dataArray = [];\n  private isViewInit = false;\n  private todoAfterInit = [];\n  public arrowkeyLocation = 0;\n  public isKeyNavigation = false;\n\n  public constructor(private changeDetector: ChangeDetectorRef) {\n\n  }\n\n  public ngOnInit() {\n    this.id = `id-${this.name}-${Math.round(Math.random() * 100 + 100)}`;\n    this.changeDetector.detach();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('classStyle')) {\n      changes.classStyle.currentValue.forEach((style) => {\n        this.dropdown.nativeElement.classList.add(style);\n      });\n    }\n\n    if (changes.hasOwnProperty('data')) {\n      if (!this.isViewInit) {\n        this.todoAfterInit.push(this.loadData.bind(this));\n      } else {\n        this.loadData();\n      }\n    }\n\n    if (changes.hasOwnProperty('currentValue')) {\n      if (!this.isViewInit) {\n        this.todoAfterInit.push(this.setCurrentValue.bind(this, changes.currentValue.currentValue));\n      } else {\n        this.setCurrentValue(changes.currentValue.currentValue);\n        this.setSelectedItem(this.currentValue);\n      }\n    }\n\n    if (!changes.hasOwnProperty('name')) {\n      this.name = (this.name === '') ? this.label.replace(/\\s/g, '') : this.name;\n    }\n    componentHandler.upgradeElements(this.dropdown.nativeElement);\n  }\n\n  private setCurrentValue(item) {\n    if (!item) {\n      return;\n    }\n    if (typeof item === 'string') {\n      this.currentValue = {\n        [this.keys.value]: item,\n        [this.keys.title]: item,\n      };\n    } else {\n      this.currentValue = item;\n    }\n  }\n\n  private loadData() {\n    if (this.data.length > 0) {\n      if (typeof this.data[0] === 'string') {\n        this.dataArray = [];\n        this.data.forEach((item) => {\n          this.dataArray.push({\n            [this.keys.value]: item,\n            [this.keys.title]: item,\n          });\n        });\n      }\n      if (typeof this.data[0] === 'object') {\n        this.dataArray = this.data;\n      }\n    }\n    this.disabled = this.dataArray.length < 1 || this.disabled;\n  }\n\n  public ngAfterViewInit() {\n    this.isViewInit = true;\n    this.todoAfterInit.forEach(func => func.call());\n    this.todoAfterInit = [];\n    this.setSelectedItem(this.currentValue);\n    this.changeDetector.detectChanges();\n    this.changeDetector.reattach();\n  }\n\n  public menuKeyDown(event: KeyboardEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.isKeyNavigation = true;\n    const isVisible = this.menu.nativeElement.parentElement.classList.contains('is-visible');\n    switch (event.keyCode) {\n      case 38: // arrow up\n        this.arrowkeyLocation = this.arrowkeyLocation > 0 ? this.arrowkeyLocation - 1 : this.dataArray.length - 1;\n        break;\n      case 40: // arrow down\n        this.arrowkeyLocation = this.arrowkeyLocation >= (this.dataArray.length - 1) ? 0 : this.arrowkeyLocation + 1;\n        break;\n      case 13: // enter\n        if (isVisible) {\n          this.setCurrentValue(this.data[this.arrowkeyLocation]);\n          this.closeMenu();\n        } else {\n          this.openMenu();\n        }\n        break;\n      case 27: // esc\n        this.closeMenu();\n        break;\n    }\n  }\n\n  public keyDownTab(event) {\n    const isVisible = this.menu.nativeElement.parentElement.classList.contains('is-visible');\n    switch (event.keyCode) {\n      case 9: // tab\n        if (isVisible) {\n          this.closeMenu();\n        }\n        break;\n    }\n  }\n\n  public onInputClick(e) {\n    e.stopPropagation();\n    if (this.disabled) {\n      return;\n    }\n\n    const isVisible = this.menu.nativeElement.parentElement.classList.contains('is-visible');\n    this.hideAllMenu();\n    if (!isVisible) {\n      this.openMenu();\n    } else {\n      this.isFocused = false;\n      this.opened = false;\n    }\n  }\n\n  private openMenu() {\n    this.arrowkeyLocation = this.dataArray.findIndex(item => item[this.keys.value] === this.currentValue[this.keys.value]);\n    this.menu.nativeElement['MaterialMenu'].show();\n    this.isFocused = true;\n    this.opened = true;\n  }\n\n  private closeMenu() {\n    this.hideAllMenu();\n    this.isFocused = false;\n    this.opened = false;\n  }\n\n  private hideAllMenu() {\n    const allSelects = document.querySelectorAll('.material-angular-select') as any;\n    allSelects.forEach((select: HTMLElement) => {\n      const menu = select.querySelector('.mdl-js-menu');\n      menu['MaterialMenu'].hide();\n    });\n  }\n\n  public setSelectedItem(item) {\n    if (!item) {\n      return;\n    }\n    this.currentValue = item;\n    this.selectedValue.emit(item);\n    this.dropdown.nativeElement.MaterialTextfield.change(this.currentValue[this.keys.title]); // handles css class changes\n    setTimeout(() => {\n      this.dropdown.nativeElement.MaterialTextfield.updateClasses_(); // update css class\n    },\n               250);\n\n    if ('createEvent' in document) {\n      const evt = document.createEvent('HTMLEvents');\n      evt.initEvent('change', false, true);\n      this.menu.nativeElement['MaterialMenu'].hide();\n      this.input.nativeElement.dispatchEvent(evt);\n    } else {\n      this.input.nativeElement.fireEvent('onchange');\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialAngularSelectComponent } from './material-angular-select.component';\n\n@NgModule({\n  declarations: [MaterialAngularSelectComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [MaterialAngularSelectComponent],\n})\nexport class MaterialAngularSelectModule { }\n"]}